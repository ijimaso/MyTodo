{"version":3,"sources":["Count.js","InputForm.js","Todo.js","Todolist.js","ErrorModal.js","App.js","index.js"],"names":["Count","props","react_default","a","createElement","className","id","Badge_default","variant","doneTodo","undoneTodo","InputForm","Container_default","Row_default","Col_default","md","Form_default","onSubmit","makeTodo","Group","controlId","Label","Control","type","placeholder","name","as","rows","Button_default","Todo","doneClassName","done","buttonClassName","Card_default","style","width","Body","Title","title","Text","content","onClick","event","preventDefault","switchStatus","deleteTodo","Todolist","lineNumber","_this","this","todos","filter","todo","map","onelineTodo","src_Todo","Object","assign","key","todolists","i","push","arrangeTodos","Component","ErrorModal","Modal_default","show","onHide","modalClose","Header","closeButton","concat","modalMessage","Footer","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","todosLength","length","state","countTodo","setState","target","value","slice","modalShow","clickTodo","selectedIndex","findIndex","setTodo","leftTodos","deletedTodo","src_Count","src_InputForm","bind","src_ErrorModal","Todolist_Todolist","rootElement","document","getElementById","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.a87ab636.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/Count.css\";\r\n\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\n\r\n/**\r\n * Countコンポーネント\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst Count = props => {\r\n    return (\r\n        <div className=\"count\">\r\n            <div className=\"eachbadge\">\r\n                <h1 id=\"done\">\r\n                    <Badge variant=\"info\">Done:{props.doneTodo}</Badge>\r\n                </h1>\r\n            </div>\r\n            <div className=\"eachbadge\">\r\n                <h1>\r\n                    <Badge variant=\"warning\">Undone:{props.undoneTodo}</Badge>\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Count;","import React from \"react\";\r\nimport \"./css/InputForm.css\";\r\n\r\n// react-bootstrapからButton,Form,Container,Row,Colコンポーネントをインポート\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n/**\r\n * InputFormコンポーネント\r\n *\r\n * @export\r\n * @class InputForm\r\n * @extends {Component}\r\n */\r\nconst InputForm = props => {\r\n    return (\r\n        <div className=\"InputForm\">\r\n            <Container>\r\n                <Row>\r\n                    <Col />\r\n                    <Col md={6}>\r\n                        <Form onSubmit={props.makeTodo}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label id=\"formTitle\">Title</Form.Label>\r\n                                <Form.Control type=\"title\" placeholder=\"Title\" name=\"title\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Content</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows=\"3\" name=\"content\" />\r\n                            </Form.Group>\r\n                            <Button variant=\"success\" type=\"create\" id=\"createButton\">\r\n                                Create\r\n                                </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputForm;","import React from \"react\";\r\nimport \"./css/Todo.css\";\r\n\r\n//react-bootstrapからCard,Buttonコンポーネントをインポート\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n/**\r\n * Todoコンポーネント\r\n * Fuctional Component\r\n * props(親から渡された変数)を受け取って表示\r\n * fuctional componentはpropsを指定するとき，thisがいらない\r\n * react-bootstrapのCardコンポーネントで装飾\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst Todo = props => {\r\n    const doneClassName = props.done? \"done\" : \"undone\";\r\n    const buttonClassName = props.done ? \"warning\" : \"info\";\r\n    const done = props.done ? \"Undone\" : \"Done\";\r\n\r\n    return (\r\n        <div className={doneClassName}>\r\n            <Card style={{ width: \"250px\" }}>\r\n                <Card.Body>\r\n                    <Card.Title>{props.title}</Card.Title>\r\n                    <Card.Text>{props.content}</Card.Text>\r\n                    <Button variant={buttonClassName} onClick={(event) => {\r\n                        event.preventDefault();\r\n                        props.switchStatus(props);\r\n                    }} id=\"doneButton\">{done}</Button>\r\n                    <Button variant=\"danger\" onClick={(event) => {\r\n                        event.preventDefault();\r\n                        props.deleteTodo(props);\r\n                    }}>Delete</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n//Todoコンポーネントをデフォルトのコンポーネントとして，エクスポート\r\nexport default Todo;","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport \"./css/Todolist.css\";\r\n\r\n\r\n/**\r\n * Todolistコンポーネント\r\n * \r\n * @export\r\n * @class Todolist\r\n * @extends {Component}\r\n */\r\nexport default class Todolist extends Component {\r\n\r\n    /**\r\n     * 一行に3個のTodoを並べるメソッド\r\n     *\r\n     * @param {*} lineNumber 行数\r\n     * @returns {list}\r\n     * @memberof Todolist\r\n     */\r\n    arrangeTodos(lineNumber) {\r\n        // filterメソッドで3列になるようにTodosを取り出す\r\n        const onelineTodos = this.props.todos.filter(todo => {\r\n            return (\r\n                todo.id >= 3 * lineNumber - 2 && todo.id <= lineNumber * 3\r\n            );\r\n        });\r\n\r\n        //取り出したTodos(配列)を使って，それぞれのTodoに対して，Todoコンポーネントを呼び出す\r\n        //{...eactTodo}で下の階層にプロパティをまとめて渡す\r\n        const eachTodos = onelineTodos.map(onelineTodo => {\r\n            return <Todo key={onelineTodo.id} {...onelineTodo} switchStatus={this.props.switchStatus} deleteTodo={this.props.deleteTodo} />;\r\n        });\r\n\r\n        return eachTodos;\r\n    }\r\n\r\n    render() {\r\n        const todolists = [];\r\n        const lines = 100;\r\n        for (let i = 1; i <= lines; i++) {\r\n            todolists.push(<li key={i}>{this.arrangeTodos(i)}</li>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"Todolist\">\r\n                <ul>{todolists}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n/**\r\n * ErrorModalコンポーネント\r\n *\r\n * @export\r\n * @class ErrorModal\r\n * @extends {Component}\r\n */\r\nconst ErrorModal = props => {\r\n    return (<Modal show={props.show} onHide={props.modalClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Error</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{`Please enter a new Todo's ${props.modalMessage}!!`}</Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={props.modalClose}>\r\n                OK!\r\n                </Button>\r\n        </Modal.Footer>\r\n    </Modal>)\r\n}\r\n\r\nexport default ErrorModal;\r\n","import React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport InputForm from \"./InputForm\";\nimport Todolist from \"./Todolist\";\nimport ErrorModal from \"./ErrorModal\";\nimport \"./css/App.css\";\n\n\n/**\n * Appコンポーネント\n * Todoコンポーネントをデフォルトのコンポーネントとして，エクスポート\n *\n * @export\n * @class App\n * @extends {Component}\n */\nexport default class App extends Component {\n\n  //データを設定\n  constructor() {\n    super();\n    const todos = [];\n    const todosLength = todos.length;\n    const modalMessage = \"\";\n\n    //状態(state)を保存\n    this.state = {\n      todos: todos,\n      doneTodo: todosLength,\n      undoneTodo: todosLength,\n      modalMessage: modalMessage,\n      show: false,\n      countTodo: todosLength\n    };\n  }\n\n  //modalを表示/非表示する関数\n  modalShow() {\n    this.setState({ show: true });\n  }\n\n  modalClose() {\n    this.setState({ show: false });\n  }\n\n  /**\n   * フォームに入力された新しいTodoを作成するメソッド\n   *\n   * @param {*} event\n   * @memberof App\n   */\n  makeTodo(event) {\n    event.preventDefault();\n\n    // event.target.(name属性).valueでフォームの中身を取り出す\n    const title = event.target.title.value;\n    const content = event.target.content.value;\n\n    // constructorから値を取り出し\n    const todos = this.state.todos.slice(); //全部の要素を新しい配列としてコピー\n    let undoneTodo = this.state.undoneTodo;\n    let modalMessage = this.state.modalMessage;\n    let countTodo = this.state.countTodo;\n\n    // titleとcontentの両方の記入が必要\n    if (title !== \"\" && content !== \"\") {\n      countTodo += 1;\n      undoneTodo += 1;\n\n      // 作成したTodoを配列todosに追加\n      todos.push({\n        id: countTodo,\n        title: title,\n        content: content,\n        done: false\n      });\n\n      //値を更新\n      this.setState({ todos: todos });\n      this.setState({ countTodo: countTodo });\n      this.setState({ undoneTodo: undoneTodo });\n\n      // フォームの中身を空に再設定\n      event.target.title.value = \"\";\n      event.target.content.value = \"\";\n    } else if (title === \"\" && content !== \"\") {\n      modalMessage = \"title\";\n      this.modalShow();\n    } else if (title !== \"\" && content === \"\") {\n      modalMessage = \"content\";\n      this.modalShow();\n    } else {\n      modalMessage = \"both of title and content\";\n      this.modalShow();\n    }\n\n    this.setState({ modalMessage: modalMessage });\n\n  }\n\n  /**\n   * 完了/未完了ボタンを押すと切り替わるメソッド\n   *\n   * @param {*} clickTodo\n   * @memberof App\n   */\n  switchStatus(clickTodo) {\n    const todos = this.state.todos.slice();\n    let doneTodo = this.state.doneTodo;\n    let undoneTodo = this.state.undoneTodo;\n\n    // クリックしたTodoのインデックスを取得\n    const selectedIndex = todos.findIndex(todo => {\n      return todo.id === clickTodo.id;\n    })\n\n    const setTodo = todos[selectedIndex];\n\n    // 真偽値を反転\n    setTodo.done = !setTodo.done;\n\n    // 完了/未完了によって，個数をカウント\n    if (setTodo.done === true) {\n      doneTodo += 1;\n      undoneTodo -= 1;\n    }\n\n    if (setTodo.done === false) {\n      undoneTodo += 1;\n      doneTodo -= 1;\n    }\n\n    this.setState({ todos: todos });\n    this.setState({ doneTodo: doneTodo });\n    this.setState({ undoneTodo: undoneTodo });\n  }\n\n\n  /**\n   * 削除ボタンを押すとTodoを削除するメソッド\n   *\n   * @param {*} clickTodo\n   * @memberof App\n   */\n  deleteTodo(clickTodo) {\n    const todos = this.state.todos.slice();\n    let doneTodo = this.state.doneTodo;\n    let undoneTodo = this.state.undoneTodo;\n\n    const leftTodos = todos.filter(todo => {\n      return todo.id !== clickTodo.id;\n    });\n\n    const deletedTodo = todos.filter(todo => {\n      return todo.id === clickTodo.id;\n    })\n\n    if (deletedTodo[0].done === true) {\n      doneTodo -= 1;\n    }\n\n    if (deletedTodo[0].done === false) {\n      undoneTodo -= 1;\n    }\n\n    this.setState({ todos: leftTodos });\n    this.setState({ doneTodo: doneTodo });\n    this.setState({ undoneTodo: undoneTodo });\n  }\n\n  // レンダリング\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 id=\"title\">MyTodo</h1>\n        <Count doneTodo={this.state.doneTodo} undoneTodo={this.state.undoneTodo} />\n        <InputForm makeTodo={this.makeTodo.bind(this)} />\n        <ErrorModal show={this.state.show} modalMessage={this.state.modalMessage} modalShow={this.modalShow.bind(this)} modalClose={this.modalClose.bind(this)} />\n        <Todolist todos={this.state.todos} switchStatus={this.switchStatus.bind(this)} deleteTodo={this.deleteTodo.bind(this)} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\n//index.htmlのroot要素にレンダリングしたDOMを挿入\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}